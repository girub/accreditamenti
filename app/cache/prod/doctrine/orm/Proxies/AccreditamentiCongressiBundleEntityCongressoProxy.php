<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class AccreditamentiCongressiBundleEntityCongressoProxy extends \Accreditamenti\CongressiBundle\Entity\Congresso implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setCodiceCongresso($codiceCongresso)
    {
        $this->__load();
        return parent::setCodiceCongresso($codiceCongresso);
    }

    public function getCodiceCongresso()
    {
        $this->__load();
        return parent::getCodiceCongresso();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setTitolo($titolo)
    {
        $this->__load();
        return parent::setTitolo($titolo);
    }

    public function getTitolo()
    {
        $this->__load();
        return parent::getTitolo();
    }

    public function setDescrizione($descrizione)
    {
        $this->__load();
        return parent::setDescrizione($descrizione);
    }

    public function getDescrizione()
    {
        $this->__load();
        return parent::getDescrizione();
    }

    public function setDataInizio($dataInizio)
    {
        $this->__load();
        return parent::setDataInizio($dataInizio);
    }

    public function getDataInizio()
    {
        $this->__load();
        return parent::getDataInizio();
    }

    public function setDataFine($dataFine)
    {
        $this->__load();
        return parent::setDataFine($dataFine);
    }

    public function getDataFine()
    {
        $this->__load();
        return parent::getDataFine();
    }

    public function setLuogo($luogo)
    {
        $this->__load();
        return parent::setLuogo($luogo);
    }

    public function getLuogo()
    {
        $this->__load();
        return parent::getLuogo();
    }

    public function setManifesto($manifesto)
    {
        $this->__load();
        return parent::setManifesto($manifesto);
    }

    public function getManifesto()
    {
        $this->__load();
        return parent::getManifesto();
    }

    public function setPathPdfProgramma($pathPdfProgramma)
    {
        $this->__load();
        return parent::setPathPdfProgramma($pathPdfProgramma);
    }

    public function getPathPdfProgramma()
    {
        $this->__load();
        return parent::getPathPdfProgramma();
    }

    public function setPathPdfIscrizione($pathPdfIscrizione)
    {
        $this->__load();
        return parent::setPathPdfIscrizione($pathPdfIscrizione);
    }

    public function getPathPdfIscrizione()
    {
        $this->__load();
        return parent::getPathPdfIscrizione();
    }

    public function setPathPdfPrenotazione($pathPdfPrenotazione)
    {
        $this->__load();
        return parent::setPathPdfPrenotazione($pathPdfPrenotazione);
    }

    public function getPathPdfPrenotazione()
    {
        $this->__load();
        return parent::getPathPdfPrenotazione();
    }

    public function setEmailReferente($emailReferente)
    {
        $this->__load();
        return parent::setEmailReferente($emailReferente);
    }

    public function getEmailReferente()
    {
        $this->__load();
        return parent::getEmailReferente();
    }

    public function setRicezioneAbstract($ricezioneAbstract)
    {
        $this->__load();
        return parent::setRicezioneAbstract($ricezioneAbstract);
    }

    public function getRicezioneAbstract()
    {
        $this->__load();
        return parent::getRicezioneAbstract();
    }

    public function setPaginaSponsor($paginaSponsor)
    {
        $this->__load();
        return parent::setPaginaSponsor($paginaSponsor);
    }

    public function getPaginaSponsor()
    {
        $this->__load();
        return parent::getPaginaSponsor();
    }

    public function setAbilitato($abilitato)
    {
        $this->__load();
        return parent::setAbilitato($abilitato);
    }

    public function getAbilitato()
    {
        $this->__load();
        return parent::getAbilitato();
    }

    public function addAccreditamenti(\Accreditamenti\CongressiBundle\Entity\Accreditamento $accreditamenti)
    {
        $this->__load();
        return parent::addAccreditamenti($accreditamenti);
    }

    public function getAccreditamenti()
    {
        $this->__load();
        return parent::getAccreditamenti();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'codice_congresso', 'url', 'titolo', 'descrizione', 'data_inizio', 'data_fine', 'luogo', 'manifesto', 'path_pdf_programma', 'path_pdf_iscrizione', 'path_pdf_prenotazione', 'email_referente', 'ricezione_abstract', 'pagina_sponsor', 'abilitato', 'accreditamenti');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}