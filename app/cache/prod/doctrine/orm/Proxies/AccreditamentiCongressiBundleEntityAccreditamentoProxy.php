<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class AccreditamentiCongressiBundleEntityAccreditamentoProxy extends \Accreditamenti\CongressiBundle\Entity\Accreditamento implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setTitolo($titolo)
    {
        $this->__load();
        return parent::setTitolo($titolo);
    }

    public function getTitolo()
    {
        $this->__load();
        return parent::getTitolo();
    }

    public function setLuogo($luogo)
    {
        $this->__load();
        return parent::setLuogo($luogo);
    }

    public function getLuogo()
    {
        $this->__load();
        return parent::getLuogo();
    }

    public function setDataInizio($dataInizio)
    {
        $this->__load();
        return parent::setDataInizio($dataInizio);
    }

    public function getDataInizio()
    {
        $this->__load();
        return parent::getDataInizio();
    }

    public function setDataFine($dataFine)
    {
        $this->__load();
        return parent::setDataFine($dataFine);
    }

    public function getDataFine()
    {
        $this->__load();
        return parent::getDataFine();
    }

    public function setOreFormative($oreFormative)
    {
        $this->__load();
        return parent::setOreFormative($oreFormative);
    }

    public function getOreFormative()
    {
        $this->__load();
        return parent::getOreFormative();
    }

    public function setObiettivoFormativo($obiettivoFormativo)
    {
        $this->__load();
        return parent::setObiettivoFormativo($obiettivoFormativo);
    }

    public function getObiettivoFormativo()
    {
        $this->__load();
        return parent::getObiettivoFormativo();
    }

    public function setNumeroCrediti($numeroCrediti)
    {
        $this->__load();
        return parent::setNumeroCrediti($numeroCrediti);
    }

    public function getNumeroCrediti()
    {
        $this->__load();
        return parent::getNumeroCrediti();
    }

    public function setNumeroAccreditamento($numeroAccreditamento)
    {
        $this->__load();
        return parent::setNumeroAccreditamento($numeroAccreditamento);
    }

    public function getNumeroAccreditamento()
    {
        $this->__load();
        return parent::getNumeroAccreditamento();
    }

    public function setCongresso(\Accreditamenti\CongressiBundle\Entity\Congresso $congresso)
    {
        $this->__load();
        return parent::setCongresso($congresso);
    }

    public function getCongresso()
    {
        $this->__load();
        return parent::getCongresso();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'numero_accreditamento', 'titolo', 'luogo', 'data_inizio', 'data_fine', 'ore_formative', 'obiettivo_formativo', 'numero_crediti', 'congresso');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}