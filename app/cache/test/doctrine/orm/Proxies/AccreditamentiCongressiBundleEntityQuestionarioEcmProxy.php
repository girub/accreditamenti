<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class AccreditamentiCongressiBundleEntityQuestionarioEcmProxy extends \Accreditamenti\CongressiBundle\Entity\QuestionarioEcm implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function setPercentualeRisposteEsatte($percentualeRisposteEsatte)
    {
        $this->__load();
        return parent::setPercentualeRisposteEsatte($percentualeRisposteEsatte);
    }

    public function getPercentualeRisposteEsatte()
    {
        $this->__load();
        return parent::getPercentualeRisposteEsatte();
    }

    public function setNumeroTentativiCompilazione($numeroTentativiCompilazione)
    {
        $this->__load();
        return parent::setNumeroTentativiCompilazione($numeroTentativiCompilazione);
    }

    public function getNumeroTentativiCompilazione()
    {
        $this->__load();
        return parent::getNumeroTentativiCompilazione();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setDataInizioCompilazione($dataInizioCompilazione)
    {
        $this->__load();
        return parent::setDataInizioCompilazione($dataInizioCompilazione);
    }

    public function getDataInizioCompilazione()
    {
        $this->__load();
        return parent::getDataInizioCompilazione();
    }

    public function setDataFineCompilazione($dataFineCompilazione)
    {
        $this->__load();
        return parent::setDataFineCompilazione($dataFineCompilazione);
    }

    public function getDataFineCompilazione()
    {
        $this->__load();
        return parent::getDataFineCompilazione();
    }

    public function setAccreditamentoId($accreditamentoId)
    {
        $this->__load();
        return parent::setAccreditamentoId($accreditamentoId);
    }

    public function getAccreditamentoId()
    {
        $this->__load();
        return parent::getAccreditamentoId();
    }

    public function setAccreditamento(\Accreditamenti\CongressiBundle\Entity\Accreditamento $accreditamento)
    {
        $this->__load();
        return parent::setAccreditamento($accreditamento);
    }

    public function getAccreditamento()
    {
        $this->__load();
        return parent::getAccreditamento();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function addDomanda(\Accreditamenti\CongressiBundle\Entity\Domanda $domanda)
    {
        $this->__load();
        return parent::addDomanda($domanda);
    }

    public function getDomanda()
    {
        $this->__load();
        return parent::getDomanda();
    }

    public function setDescrizione($descrizione)
    {
        $this->__load();
        return parent::setDescrizione($descrizione);
    }

    public function getDescrizione()
    {
        $this->__load();
        return parent::getDescrizione();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'percentuale_risposte_esatte', 'numero_tentativi_compilazione', 'id', 'data_inizio_compilazione', 'data_fine_compilazione', 'accreditamento_id', 'accreditamento', 'domanda', 'descrizione');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}